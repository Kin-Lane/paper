<?php$route = '/paper/:paper_id/components/';$app->get($route, function ($paper_id)  use ($app,$appid,$appkey){	$host = $_SERVER['HTTP_HOST'];	$paper_id = prepareIdIn($paper_id,$host);	$ReturnObject = array(); 	$request = $app->request(); 	$params = $request->params();	$paper_id = mysql_real_escape_string($paper_id);	$Query = "SELECT * FROM paper WHERE paper_id = " . $paper_id;	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	if($DatabaseResult && mysql_num_rows($DatabaseResult))		{		$Database = mysql_fetch_assoc($DatabaseResult);		$paper_id = $Database['paper_id'];		$paper_title = $Database['title'];		$paper_author = $Database['author'];		$paper_summary = $Database['summary'];		}	$thistag = "";	$Query = "SELECT Tag FROM tags t JOIN paper_tag_pivot ptp ON t.Tag_ID = ptp.Tag_ID WHERE ptp.paper_id = " . $paper_id;	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	if($DatabaseResult && mysql_num_rows($DatabaseResult))		{		$Database = mysql_fetch_assoc($DatabaseResult);		$thistag = $Database['Tag'];;		}	$Query = "SELECT * FROM paper_component WHERE paper_id = " . $paper_id . " ORDER BY Sort_order ASC";	//echo $Query . "<br />";	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$paper_component_id = $Database['paper_component_id'];		$name = $Database['name'];		$type = $Database['type'];		$sort_order = $Database['sort_order'];		$page_id = $Database['page_id'];		$keyword = $Database['keyword'];		$show_title = $Database['show_title'];		// manipulation zone		$paper_id = prepareIdOut($paper_id,$host);		$F = array();		$F['paper_id'] = $paper_id;		$F['paper_component_id'] = $paper_component_id;		$F['name'] = $name;		$F['type'] = $type;		$F['tag'] = $thistag;		$F['keyword'] = $keyword;		$F['show_title'] = $show_title;		$F['sort_order'] = $sort_order;		if($keyword!='')			{			$usetag = $keyword;			}		else			{			$usetag = $thistag;			}		if($type=='Page')			{			$F['pages'] = array();			$url = "https://page.api.kinlane.com:443/page/" . $page_id . "/?appid=" . $appid . "&appkey=" . $appkey;			//echo $url . "<br />";			$http = curl_init();			curl_setopt($http, CURLOPT_URL, $url);			curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);			curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);			$output = curl_exec($http);			//echo $output;			$Page = json_decode($output,true);			//var_dump($Page);			$Stack = array();			$Stack['id'] = $Page['page_id'];			$Stack['title'] = $Page['title'];			$Stack['body'] = $Page['body'];			array_push($F['pages'], $Stack);			}		elseif($type=='Organization')			{			$F['organizations'] = array();			$url = "https://organization.api.kinlane.com:443/organization/tags/" . urlencode($usetag) . "/?appid=" . $appid . "&appkey=" . $appkey;			//echo $url . "<br />";			$http = curl_init();			curl_setopt($http, CURLOPT_URL, $url);			curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);			curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);			$output = curl_exec($http);			//echo $output;			$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);			$info = curl_getinfo($http);			$Organizations = json_decode($output,true);			$toggle = 0;			$company_count = 0;			$swagger_count = 0;			$api_count = 0;			if(count($Organizations) > 0)				{				foreach($Organizations as $Companys)					{					$Company_ID = $Companys['organization_id'];					$Name = $Companys['name'];					$Details = $Companys['details'];					$Screenshot_URL = $Companys['photo'];					$url = $Companys['url'];					$blog_url = $Companys['blog_url'];					$blog_rss_url = $Companys['blog_rss_url'];					$twitter_url = $Companys['twitter_url'];					$github_url = $Companys['github_url'];					$apisjson_url = $Companys['apisjson_url'];					$photo = $Companys['photo'];					$photo_width = $Companys['photo_width'];					$Provider_Tags = $Companys['tags'];					$tag_url = $Companys['tag_url'];					$tag_description = $Companys['tag_description'];					$Details = strip_tags($Details);					$Details = str_replace("&nbsp;", "", $Details);					if($tag_description!=''){ $Details = $tag_description; }					if($tag_url!=''){ $url = $tag_url; }					$Stack = array();					$Stack['id'] = $Company_ID;					$Stack['name'] = $Name;					$Stack['summary'] = substr($Details,0,400);					$Stack['details'] = $Details;					$Stack['website'] = $url;					$Stack['twitter'] = $twitter_url;					$Stack['github'] = $github_url;					$Stack['blog'] = $blog_url;					$Stack['blogrss'] = $blog_rss_url;					$Stack['logo'] = $photo;					$Stack['logo_width'] = $photo_width;					$Stack['screenshot'] = $Screenshot_URL;					$Stack['tags'] = $Provider_Tags;					array_push($F['organizations'], $Stack);					}				}			}		elseif($type=='Building Block')			{			$F['buildingblocks'] = array();			$url = "https://buildingblock.api.kinlane.com:443/buildingblocks/tags/" . urlencode($usetag) . "/?appid=" . $appid . "&appkey=" . $appkey;			//echo $url . "<br />";			$http = curl_init();			curl_setopt($http, CURLOPT_URL, $url);			curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);			curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);			$output = curl_exec($http);			//echo $output;			$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);			$info = curl_getinfo($http);			$BuildingBlocks = json_decode($output,true);			if(count($BuildingBlocks) > 0)				{				foreach($BuildingBlocks as $BuildingBlocks)					{					$building_block_id = $BuildingBlocks['building_block_id'];					$building_block_category_id = $BuildingBlocks['building_block_category_id'];					$name = $BuildingBlocks['name'];					$about = $BuildingBlocks['about'];					$category_id = $BuildingBlocks['category_id'];					$category = $BuildingBlocks['category'];					$image = $BuildingBlocks['image'];					$image_width = $BuildingBlocks['image_width'];					$sort_order = $BuildingBlocks['sort_order'];					// manipulation zone					$Stack = array();					$Stack['building_block_id'] = $building_block_id;					$Stack['building_block_category_id'] = $building_block_category_id;					$Stack['name'] = $name;					$Stack['about'] = $about;					$Stack['category_id'] = $category_id;					$Stack['category'] = $category;					$Stack['image'] = $image;					$Stack['image_width'] = $image_width;					$Stack['sort_order'] = $sort_order;					array_push($F['buildingblocks'], $Stack);					}				}			}		elseif($type=='Building Block by Category')			{			$F['buildingblocks'] = array();			$url = "https://buildingblock.api.kinlane.com:443/buildingblocks/tags/" . urlencode($usetag) . "/?appid=" . $appid . "&appkey=" . $appkey;			//echo $url . "<br />";			$http = curl_init();			curl_setopt($http, CURLOPT_URL, $url);			curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);			curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);			$output = curl_exec($http);			//echo $output;			$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);			$info = curl_getinfo($http);			$BuildingBlocks = json_decode($output,true);			if(count($BuildingBlocks) > 0)				{				foreach($BuildingBlocks as $BuildingBlocks)					{					$building_block_id = $BuildingBlocks['building_block_id'];					$building_block_category_id = $BuildingBlocks['building_block_category_id'];					$name = $BuildingBlocks['name'];					$about = $BuildingBlocks['about'];					$category_id = $BuildingBlocks['category_id'];					$category = $BuildingBlocks['category'];					$image = $BuildingBlocks['image'];					$image_width = $BuildingBlocks['image_width'];					$sort_order = $BuildingBlocks['sort_order'];					// manipulation zone					$Stack = array();					$Stack['building_block_id'] = $building_block_id;					$Stack['building_block_category_id'] = $building_block_category_id;					$Stack['name'] = $name;					$Stack['about'] = $about;					$Stack['category_id'] = $category_id;					$Stack['category'] = $category;					$Stack['image'] = $image;					$Stack['image_width'] = $image_width;					$Stack['sort_order'] = $sort_order;					array_push($F['buildingblocks'], $Stack);					}				}			}		elseif($type=='Tool')			{			$F['tools'] = array();			$url = "https://tool.api.kinlane.com:443/tool/tags/" . urlencode($usetag) . "/groupbytag/?appid=" . $appid . "&appkey=" . $appkey;			//echo $url . "<br />";			$http = curl_init();			curl_setopt($http, CURLOPT_URL, $url);			curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);			curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);			$output = curl_exec($http);			//echo $output;			$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);			$info = curl_getinfo($http);			$Tools = json_decode($output,true);			if(count($Tools) > 0)				{				$T = array();				foreach($Tools as $key=>$value)					{					$tool_group = $key;					$T[$tool_group] = array();					$ToolArray = array();					foreach($value as $Tool)						{						$tool_id = $Tool['tool_id'];						$name = $Tool['name'];						$user = $Tool['user'];						$details = $Tool['details'];						$post_date = $Tool['post_date'];						$url = $Tool['url'];						$logo = $Tool['logo'];						$forks = $Tool['forks'];						$followers = $Tool['followers'];						$watchers = $Tool['watchers'];						$Stack = array();						$Stack['id'] = $tool_id;						$Stack['name'] = $name;						$Stack['details'] = $details;						$Stack['url'] = $url;						array_push($ToolArray, $Stack);						}					$T[$tool_group] = $ToolArray;					}				$F['tools'] = $T;				}			}		elseif($type=='Curated')			{			$F['curated'] = array();			$url = "https://curated.api.kinlane.com:443/curated/tags/" . urlencode($usetag) . "/?appid=" . $appid . "&appkey=" . $appkey;			//echo $url . "<br />";			$http = curl_init();			curl_setopt($http, CURLOPT_URL, $url);			curl_setopt($http, CURLOPT_RETURNTRANSFER, 1);			curl_setopt($http, CURLOPT_SSL_VERIFYPEER, false);			$output = curl_exec($http);			$http_status = curl_getinfo($http, CURLINFO_HTTP_CODE);			$info = curl_getinfo($http);			$CuratedPosts = json_decode($output,true);			foreach($CuratedPosts as $CuratedPost)				{				$curated_id = $CuratedPost['curated_id'];				$curated_title = $CuratedPost['title'];				$curated_link = $CuratedPost['link'];				$curated_image = $CuratedPost['screenshot_url'];				$github_build = $CuratedPost['github_build'];				$post_date = $CuratedPost['item_date'];				$Post_Year = date('Y',strtotime($post_date));				if(strlen($Post_Year)==1){$Post_Year="0".$Post_Year;}				$Post_Month = date('m',strtotime($post_date));				if(strlen($Post_Month)==1){$Post_Month="0".$Post_Month;}				$Post_Day = date('d',strtotime($post_date));				if(strlen($Post_Day)==1){$Post_Day="0".$Post_Day;}				$Host = parse_url($curated_link);				if(isset($Host['host']))					{					$domain = $Host['host'];					}				else					{					$domain = "";					}				$Stack = array();				$Stack['id'] = $curated_id;				$Stack['title'] = $curated_title;				$Stack['url'] = $curated_link;				$Stack['domain'] = $domain;				$Stack['image'] = $curated_image;				$Stack['post_date'] = $post_date;				array_push($F['curated'], $Stack);				}			}		elseif($type=='Link')			{			}		elseif($type=='Glossary')			{			}		array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});?>